<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:CDM.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CDM;component/Themes/LightStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--<Style x:Key="DGCustomizedHeaderStyle"
           TargetType="DataGridColumnHeader">
        <EventSetter Event="Click"
                     Handler="{Binding RecentHeaderCommand}" />
    </Style>-->

    <!--<converter:ArrowPathConverter x:Key="ArrowPathConverter" />-->
    <converter:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
    <converter:BoolVisibilityInverseConverter x:Key="BoolVisibilityInverseConverter" />
    <converter:DirFileTypeVisibilityConverter x:Key="DirFileTypeVisibilityConverter" />

    <Style x:Key="FolderMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Background"
                Value="red" />
        <Setter Property="Foreground"
                Value="red" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FolderCMStyle" TargetType="ContextMenu">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border x:Name="Border"
                            CornerRadius="10"
                            Background="#B0B0B0"
                            SnapsToDevicePixels="True"
                            BorderThickness="0">
                        <StackPanel ClipToBounds="True"
                                    IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    Orientation="Vertical" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnSearch"
           TargetType="Button">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="Padding"
                Value="10 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="0 3 3 0">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource OnSearchBtnMouseHover}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="backBtnStyle"
           TargetType="Button">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="Width"
                Value="40" />
        <Setter Property="Padding"
                Value="10 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource OnNavigationBtnMouseHover}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox"
           x:Key="txtSearchBoxStyle">
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Margin"
                Value="25 0 0 0" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="MinWidth"
                Value="250" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Name="border">
                        <ContentPresenter SnapsToDevicePixels="True"
                                          TextBlock.Foreground="{TemplateBinding Foreground}"
                                          Margin="10 0 0 0"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Text}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="False" />
            <Trigger Property="FocusVisualStyle"
                     Value="{x:Null}" />
        </Style.Triggers>
    </Style>

    <Style x:Key="TabItemStyle"
           TargetType="TabItem">
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundColor}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="20 10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Name="Panel">
                        <Border Name="border"
                                BorderThickness="0 0 0 2">
                            <ContentPresenter x:Name="TabContents"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header"
                                              Margin="20 10"
                                              Cursor="Hand" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="#1b72d1" />
                            <Setter Property="Cursor"
                                    Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="#1b72d1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DGStyle"
           TargetType="DataGrid">
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="CanUserResizeColumns"
                Value="False"/>
        <Setter Property="CanUserReorderColumns"
                Value="False"/>
        <Setter Property="CanUserResizeRows"
                Value="False"/>
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="GridLinesVisibility"
                Value="None" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Hidden" />
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="HeadersVisibility"
                Value="Column" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserDeleteRows"
                Value="False" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0 0.5 0.5 0" />
    </Style>

    <Style x:Key="DGCellStyle"
           TargetType="DataGridCell">
        <Setter Property="Margin"
                Value="0 5 0 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border BorderThickness="0"
                            BorderBrush="Gray"
                            Padding="10 0 0 0">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush"
                Value="Gray" />
        <Setter Property="BorderThickness"
                Value="1 0 0 0" />
        <Setter Property="Height"
                Value="40" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">

                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DGRowStyle"
           TargetType="DataGridRow">
        <Setter Property="BorderBrush"
                Value="#6b6b6b" />
        <Setter Property="BorderThickness"
                Value="0 0.5" />
        <Setter Property="FontWeight"
                Value="Regular" />
        <Setter Property="Background"
                Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#616161" />
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundColor}" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">

                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundColor}" />

                <Setter Property="Background"
                        Value="#616161" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DGHeaderStyle"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontSize"
                Value="15" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="BorderBrush"
                Value="Gray" />
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundColor}" />
        <Setter Property="Height"
                Value="40" />
        <Setter Property="FontWeight"
                Value="SemiBold" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Margin"
                Value="0 5" />
        <Setter Property="Padding"
                Value="10 0" />
    </Style>

    <Style x:Key="tbtn"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Content">
            <Setter.Value>

                <Path Data="M409.862,148.561L265.052,3.75c-5.001-5-13.099-5-18.099,0L102.133,148.561c-5.001,5-5.001,13.099,0,18.099
c5,5.001,13.099,5.001,18.099,0L243.198,43.703v455.492c0,7.074,5.726,12.8,12.8,12.8c7.074,0,12.8-5.726,12.8-12.8V43.703
l122.965,122.965c5,5,13.099,5,18.099,0C414.863,161.66,414.863,153.57,409.862,148.561z"
                      Height="30"
                      Width="30"
                      Stretch="Fill" />

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="Content">
                    <Setter.Value>

                        <Path Data="M50.5,19.881c-1.104,0-2,0.896-2,2V72.17L33.193,56.609c-0.781-0.781-1.922-0.781-2.703,0
		c-0.781,0.78-0.719,2.047,0.062,2.828l18.883,18.857c0.375,0.375,0.899,0.586,1.43,0.586s1.047-0.211,1.422-0.586l18.857-18.857
		c0.781-0.781,0.783-2.048,0.002-2.828c-0.781-0.781-2.296-0.781-3.077,0L52.5,71.933V21.881C52.5,20.776,51.604,19.881,50.5,19.881
		z"
                              Height="30"
                              Width="30"
                              Stretch="Fill" />

                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Centering"
           TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundColor}" />
    </Style>

    <Style x:Key="driveListViewItemStyle"
           TargetType="ListViewItem">
        <!-- Change background color on mouse over -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border CornerRadius="3"
                            Name="border">
                        <ContentPresenter HorizontalAlignment="Stretch"
                                          VerticalAlignment="Top" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DriveTemplateStyle">
        <Border Name="border"
                Margin="0 12 32 12"
                BorderThickness="1"
                BorderBrush="#6b6b6b"
                CornerRadius="3"
                Width="440"
                Height="80"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                Background="Transparent">
                <!--Width="429"-->

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20*" />
                    <ColumnDefinition Width="80*" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>

                <Path Data="M10.43,62.14V53.69H46.55A15.38,15.38,0,0,1,57,43.38V34.61H2.85A2.87,2.87,0,0,1,0,31.76V2.8a2.84,2.84,0,0,1,.84-2A2.89,2.89,0,0,1,2.33,0H120.54a2.88,2.88,0,0,1,1.5.79,2.84,2.84,0,0,1,.84,2v29a2.84,2.84,0,0,1-.84,2,2.88,2.88,0,0,1-2,.84H65.44v8.77A15.38,15.38,0,0,1,75.88,53.69h39.31v8.45H76a15.32,15.32,0,0,1-29.55,0ZM100.77,9.06a8.56,8.56,0,1,1-8.56,8.56,8.57,8.57,0,0,1,8.56-8.56ZM35,8h7.14V26.59H35V8ZM53.46,8H60.6V26.59H53.46V8ZM16.54,8h7.13V26.59H16.54V8ZM66.07,53.25a6.87,6.87,0,1,0,2,4.85,6.82,6.82,0,0,0-2-4.85Z"
                      Grid.Row="0"
                      Stretch="Fill"
                      Grid.Column="0"
                      Height="40"
                      Width="45"
                      Margin="5"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      Fill="{DynamicResource DriveIcnPathFillColor}"
                      Grid.RowSpan="2" />
                
                <TextBlock Grid.Row="0"
                           Grid.Column="1"
                           FontSize="15"
                           Foreground="{DynamicResource WindowForegroundColor}"
                           VerticalAlignment="Bottom"
                           Padding="10 0"
                           FontWeight="Bold"
                           Text="{Binding DriveName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <Grid Grid.Row="0" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" Visibility="{Binding Type, Converter={StaticResource DirFileTypeVisibilityConverter}}">
                        <Button x:Name="btnStar" ToolTip="Set this item as default" 
    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Path=DataContext.StarCommand}"
    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=DataContext}"
    Background="{DynamicResource DriveNavigationBtnBackgrounfColor}"
    Visibility="{Binding IsDefault, Converter={StaticResource BoolVisibilityInverseConverter}}"
    BorderThickness="0"
    Margin="0 0 5 0"
    Width="20"
    Height="20">
                            <Path Data="M98 193 c-8 -17 -25 -30 -45 -35 -38 -10 -41 -18 -12 -43 14 -13 19
-29 17 -50 -3 -27 0 -30 22 -27 31 3 49 3 80 0 22 -3 25 0 22 27 -2 21 3 37
17 50 29 25 26 33 -11 43 -21 5 -38 18 -46 35 -7 15 -17 27 -22 27 -5 0 -15
-12 -22 -27z m37 -23 c3 -11 17 -23 31 -26 24 -6 24 -7 8 -25 -11 -12 -14 -27
-10 -45 6 -23 5 -25 -11 -19 -10 4 -25 8 -33 8 -8 0 -23 -4 -33 -8 -16 -6 -17
-4 -11 19 4 18 1 33 -10 45 -16 18 -16 19 8 25 14 3 28 15 31 26 3 11 10 20
15 20 5 0 12 -9 15 -20z"
        Fill="{DynamicResource DriveNavigationBtnIcnPath}"
        Height="20"
        Width="20"                                                               
        Stretch="Uniform">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="45" CenterX="8" CenterY="10"></RotateTransform>
                                </Path.RenderTransform>
                            </Path>
                        </Button>
                        <Button x:Name="btnUnstar" ToolTip="Unset this item as default"
    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Path=DataContext.UnstarCommand}"
    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=DataContext}"
    Background="{DynamicResource DriveNavigationBtnBackgrounfColor}"
    Visibility="{Binding IsDefault, Converter={StaticResource BoolVisibilityConverter}}"
    BorderThickness="0"
    Margin="0 0 5 0"
    Width="20"
    Height="20">
                            <Path Data="M293 588 c-4 -7 -20 -46 -34 -88 l-26 -75 -85 -3 c-134 -4 -144 -43
-32 -125 49 -36 64 -53 59 -65 -3 -9 -16 -49 -27 -89 -18 -59 -19 -74 -9 -87
22 -26 43 -19 114 35 l67 52 67 -52 c71 -54 92 -61 114 -35 10 13 9 28 -9 87
-11 40 -24 80 -27 89 -5 12 10 29 59 65 112 82 102 121 -32 125 l-85 3 -26 75
c-31 91 -37 100 -61 100 -10 0 -22 -6 -27 -12z"
        Fill="{DynamicResource DriveNavigationBtnIcnPath}"
        Height="20"
        Width="20"
        Stretch="Uniform">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="45" CenterX="8" CenterY="10"></RotateTransform>
                                </Path.RenderTransform>
                            </Path>
                        </Button>
                    </Grid>
                    <Grid Grid.Column="0">
                        <Button x:Name="btnPin" ToolTip="Pin this item to the list" 
        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Path=DataContext.PinCommand}"
        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=DataContext}"
        Background="{DynamicResource DriveNavigationBtnBackgrounfColor}"
        Visibility="{Binding IsPined, Converter={StaticResource BoolVisibilityInverseConverter}}"
        BorderThickness="0"
        Margin="0 0 5 0"
        Width="20"
        Height="20">
                            <Path Data="M124 212 c-6 -4 -19 -22 -28 -39 -9 -18 -22 -33 -29 -33 -6 0 -19 -4
             -27 -10 -12 -7 -11 -12 5 -29 18 -21 18 -22 -5 -46 -30 -32 -17 -45 15 -15 24
             23 25 23 46 5 17 -16 22 -17 29 -5 6 8 10 21 10 28 0 7 16 20 35 29 55 26 55
             58 -1 102 -29 23 -34 24 -50 13z m50 -41 c32 -33 29 -43 -13 -61 -17 -7 -33
             -21 -37 -32 -6 -19 -7 -18 -35 8 -28 27 -29 29 -11 37 11 5 26 24 35 43 9 19
             20 34 25 34 5 0 21 -13 36 -29z"
           Fill="{DynamicResource DriveNavigationBtnIcnPath}"
           Height="20"
           Width="20"                                                               
           Stretch="Uniform">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="270" CenterX="9" CenterY="10"></RotateTransform>
                                </Path.RenderTransform>
                            </Path>
                        </Button>
                        <Button x:Name="btnUnpin" ToolTip="Unpin this item from the list"
        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Path=DataContext.UnpinCommand}"
        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Path=DataContext}"
        Background="{DynamicResource DriveNavigationBtnBackgrounfColor}"
        Visibility="{Binding IsPined, Converter={StaticResource BoolVisibilityConverter}}"
        BorderThickness="0"
        Margin="0 0 5 0"
        Width="20"
        Height="20">
                            <Path Data="M 1.5,1.5 C 11.426,9.75698 20.7593,18.757 29.5,28.5C 28.9984,29.521 28.3317,29.6877 27.5,29C 24.6667,26.1667 21.8333,23.3333 19,20.5C 18.2881,22.8474 17.1214,24.8474 15.5,26.5C 13.8333,25.1667 12.1667,23.8333 10.5,22.5C 2.5,29.1667 1.83333,28.5 8.5,20.5C 7.16667,18.8333 5.83333,17.1667 4.5,15.5C 6.15263,13.8786 8.15263,12.7119 10.5,12C 6.89259,8.90231 3.89259,5.40231 1.5,1.5 Z M 11.5,14.5 C 16.469,15.7763 17.469,18.443 14.5,22.5C 12.1667,20.8333 10.1667,18.8333 8.5,16.5C 9.60164,15.8243 10.6016,15.1577 11.5,14.5 Z
               M 15.5,3.5 C 16.8734,3.34332 18.2068,3.50999 19.5,4C 22,6.5 24.5,9 27,11.5C 27.8234,15.1992 26.3234,17.5325 22.5,18.5C 21.6919,18.1924 21.0253,17.6924 20.5,17C 22.0614,16.059 23.3947,14.8924 24.5,13.5C 22.4519,10.2568 19.7852,8.09009 16.5,7C 15.7894,8.25471 14.956,9.42138 14,10.5C 13.6667,10.1667 13.3333,9.83333 13,9.5C 12.9717,7.21343 13.805,5.21343 15.5,3.5 Z"
           Fill="{DynamicResource DriveNavigationBtnIcnPath}"
           Height="20"
           Width="20"
           Stretch="Uniform" />
                        </Button>
                    </Grid>
                </Grid>

                <TextBlock Grid.Row="1"
                           Grid.Column="1"
                           Grid.ColumnSpan="2"
                           FontSize="15"
                           Foreground="{DynamicResource WindowForegroundColor}"
                           VerticalAlignment="Top"
                           Text="{Binding DriveDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           Padding="10 0" />
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="border"
                        Property="Background"
                        Value="{DynamicResource OnDriveBtnHoverBackground}" />
                <Setter TargetName="border"
                        Property="BorderBrush"
                        Value="{DynamicResource OnDriveBtnHoverBorderBrush}" />
                <Setter TargetName="border"
                        Property="BorderThickness"
                        Value="2" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="QuickAccessListViewItemStyle"
           TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="3"
                            VerticalAlignment="Top"
                            TextBlock.Foreground="{DynamicResource WindowForegroundColor}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Stretch"
                                          VerticalAlignment="Top" />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="QuickAccessTemplateStyle">
        <Border Name="border"
                BorderThickness="1"
                CornerRadius="3"
                Height="60">
            <Button Grid.Row="5"
                    Style="{DynamicResource sidebarBtnStyle }">
                <Button.Content>
                    <StackPanel HorizontalAlignment="Stretch"
                                Orientation="Horizontal">
                        <Image Width="30"
                               Height="30"
                               Margin="5,0, 10,0"
                               Source="Resources/icnDrive.png" />
                        <TextBlock FontSize="15"
                                   Foreground="{DynamicResource WindowForegroundColor}"
                                   VerticalAlignment="Center"
                                   Text="Test.user@gmail.com" />
                    </StackPanel>
                </Button.Content>
            </Button>
        </Border>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter TargetName="border"
                        Property="Background"
                        Value="red" />
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="driveBtnStyle"
           TargetType="Button">
        <Setter Property="Height"
                Value="Auto" />
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#5c5c5c" />
                <Setter Property="BorderBrush"
                        Value="White" />
                <Setter Property="BorderThickness"
                        Value="1" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="#b0b0b0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Border"
           x:Key="SidebarBorder">
        <Setter Property="Height"
                Value="60" />
        <Setter Property="CornerRadius"
                Value="3" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="#5c5c5c" />
                <Setter Property="BorderBrush"
                        Value="White" />
                <Setter Property="BorderThickness"
                        Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="sidebarBtnStyle"
           TargetType="Button">
        <Setter Property="Height"
                Value="58" />
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Transparent"
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Left"
                                          VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource OnSideBarBtnHoverBackground}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource OnSideBarBtnHoverBorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource OnSideBarBtnPressedBackgroundcolor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IcnPathStyle"
           TargetType="Path">
        <Setter Property="Stretch"
                Value="Fill" />
        <Setter Property="Fill"
                Value="{DynamicResource PathIcnFillColor}" />
    </Style>
</ResourceDictionary>